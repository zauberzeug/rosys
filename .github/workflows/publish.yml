name: Upload Python Package

on:
  workflow_dispatch:
  push:
    tags:
      - v**

jobs:
  #depending on pytest workflow, see https://stackoverflow.com/a/71489231/364388
  pytest:
    uses: ./.github/workflows/pytest.yml

  pypi:
    runs-on: ubuntu-latest
    needs: pytest
    steps:
      - uses: actions/checkout@v4
      - name: set up Poetry
        uses: abatilo/actions-poetry@v2.4.0
      - name: set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "poetry"
      - name: Update version.py
        run: |
          echo "__version__ = '${GITHUB_REF#refs/tags/v}'" > rosys/version.py
      - name: get version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: set version
        run: poetry version ${{ steps.get_version.outputs.VERSION }}
      - name: publish
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
        run: poetry publish --build
      - name: Create GitHub release entry
        uses: softprops/action-gh-release@v2
        id: create_release
        with:
          draft: false
          prerelease: false
          name: ${{ steps.get_version.outputs.VERSION }}
          tag_name: ${{ steps.get_version.outputs.VERSION }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: verify
        shell: bash
        run: for i in {1..100}; do python -m pip install 'rosys==${{ steps.get_version.outputs.VERSION }}' && break || sleep 2; done

  docker:
    needs: pypi
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=${{ secrets.DOCKER_USERNAME }}/${GITHUB_REPOSITORY#*/}
          VERSION=latest
          SHORTREF=${GITHUB_SHA::8}

          # If this is git tag, use the tag name as a docker tag
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:${SHORTREF}"

          # If the VERSION looks like a version number, assume that
          # this is the most recent version of the image and also
          # tag it 'latest'.
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:latest"
          fi

          # Set output parameters.
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
      - name: Build
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          build-args: INSTALL_DEV=true
          push: true
          tags: ${{ steps.prep.outputs.tags }}

      # Uploading the README.md is not a core feature of docker/build-push-action yet
      - name: Update README
        uses: christian-korneck/update-container-description-action@v1
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASS: ${{ secrets.DOCKER_PASSWORD }}
        with:
          destination_container_repo: zauberzeug/rosys
          provider: dockerhub
          short_description: "A robot system based on web technologies with focus on autonomous mobile robots."

  docs:
    runs-on: ubuntu-latest
    needs: pypi
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install dependencies
        run: |
          python3 -m pip install -r mkdocs_requirements.txt
          python3 -m pip install -e .
      - name: Build docs
        run: mkdocs build -v
      - name: Deploy gh-pages
        uses: JamesIves/github-pages-deploy-action@v4.3.4
        with:
          folder: site
