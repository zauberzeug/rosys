[tool.poetry]
name = "rosys"
version = "0.1.0"
description = "Modular Robot System With Elegant Automation Capabilities"
authors = ["Zauberzeug GmbH <info@zauberzeug.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/zauberzeug/rosys"
keywords = ["robot", "framework", "automation", "control", "steer"]

[tool.poetry.dependencies]
python = ">=3.10, <3.13"
nicegui = ">=2.5.0"
pyserial = "^3.5"
numpy = ">=1.20.1,<2.0.0" # required by opencv-python < 4.9.0
scipy = "^1.7.2"
opencv-python-headless = "4.9.0.80" 
opencv-contrib-python-headless = "4.9.0.80" # 4.10 currently does not support the omnidir module properly
psutil = "^5.9.0"
networkx = "^2.6.2"
tabulate = "^0.8.9"
coloredlogs = "^15.0.1"
humanize = "^4.0.0"
uvloop = ">=0.17.0"
dataclasses-json = "^0.5.7"
suntime = "^1.2.5"
line-profiler = "^4.1.3"
yappi = "^1.6.0"
pyloot = "^0.1.0"
objgraph = "^3.6.1"
imgsize = "^2.1"
ifaddr = "^0.2.0"
httpx = "^0.24.0"
matplotlib = "^3.7.2"
pyudev = ">=0.21.0"
esptool = "^4.3"
pyquaternion = "^0.9.9"
cairosvg = "^2.7.0"
pillow = ">=10.3.0" # https://github.com/zauberzeug/rosys/security/dependabot/44
idna = ">=3.7" # https://github.com/zauberzeug/rosys/security/dependabot/45
uvicorn = "!=0.29.0" # test_examples.py fails with 0.29.0 due to persistency not correctly writting during teardown

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
autopep8 = "^1.5.5"
pytest = "^6.2.1"
pytest-watch = "^4.2.0"
pytest-flakefinder = "^1.0.0"
pytest-profiling = "^1.7.0"
pytest-asyncio = "0.19.0"
debugpy = "^1.2.1"
py-spy = "^0.3.10"
cryptography = ">=43.0.1" # https://github.com/zauberzeug/rosys/security/dependabot/52
sh = "^1.14.2"
mypy = "^1.10.1"
pylint = "^3.2.5"
pre-commit = "^4.0.1"

[build-system]
requires = [
    "setuptools>=30.3.0,<50",
    "poetry-core>=1.0.0"
]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = "3.10"
install_types = true
check_untyped_defs = true

[[tool.mypy.overrides]]
module = [
    "cairosvg",
    "coloredlogs",
    "imgsize",
    "networkx",
    "objgraph",
    "pylab",
    "pyloot.*",
    "pyquaternion",
    "pyudev",
    "scipy.*",
    "serial.*",
    "socketio.*",
    "suntime",
    "yappi",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
# NOTE: changing default location of pytest_cache because the uvicorn file watcher somehow triggered too many reloads
cache_dir = "../.pytest_cache"
testpaths = [
    "tests"
]

[tool.poetry.plugins.pytest11]
rosys = "rosys.testing.fixtures"

[tool.pylint]
disable = [
    "C0103", # Invalid name (e.g., variable/function/class naming conventions)
    "C0111", # Missing docstring (in function/class/method)
    "C0301", # Line too long (exceeds character limit)
    "R0801", # Similar lines in %s files
    "R0902", # Too many public methods
    "R0903", # Too few public methods
    "R0904", # Too many public methods
    "R0912", # Too many branches
    "R0913", # Too many arguments
    "R0914", # Too many local variables
    "R0915", # Too many statements
    "R0917", # Too many positional arguments
    "R1702", # Too many nested blocks
    "R1705", # Unnecessary "else" after "return"
    "R1724", # Unnecessary "else" after "continue"
    "W0102", # Dangerous default value as argument
    "W0511", # TODO
    "W0718", # Catching too general exception
    "W1514", # Using open without explicitly specifying an encoding
]
extension-pkg-allow-list = "cv2,scipy.spatial"

[tool.pylint.TYPECHECK]
generated-members = "cv2.*,scipy.spatial.*,sh.*"

[tool.ruff]
indent-width = 4
line-length = 120
target-version = "py310"

[tool.ruff.lint]
select = [
    "I",  # isort
    "E",  # pycodestyle
    "W",  # pycodestyle
    "B",  # bugbear
    "F",  # pyflakes
    "UP", # pyupgrade
    "RUF", # ruff
    "PL", # pylint
    "NPY201", # NumPy 2.0
]
fixable = [
    "I",  # isort
    "RUF022", # `__all__` is not sorted
]
ignore = [
    "B024", # abstract class without abstract method
    "E501", # line too long
    "E741", # ambiguous variable name
    "PLR0911", # too many return statements
    "PLR0912", # too many branches
    "PLR0913", # too many arguments
    "PLR0915", # too many statements
    "PLR2004", # magic value comparison
]
